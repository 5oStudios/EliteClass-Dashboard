version: '3.7'

networks:
  lms-network:
    driver: bridge

services:
# nginx container
  nginx:
    image: nginx:alpine
    container_name: lms-nginx
    restart: unless-stopped
    ports:
      - '80:80'
    networks:
      - lms-network
    volumes:
#      - dashboard:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - dashboard

  # admin dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
#    image: enegix/lms-dashboard:beta
    container_name: lms-dashboard
    restart: unless-stopped
    expose:
      - '9000'
    networks:
      - lms-network
    environment:
      TZ: Asia/Kuwait
    volumes:
      - dashboard:/var/www/html/public
      - uploads:/app/storage/public
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
      - redis

  supervisor:
    build:
      context: docker/supervisor
      dockerfile: Dockerfile
    image: lms-supervisor
    container_name: lms-supervisor
    restart: unless-stopped
    networks:
      - lms-network
    environment:
      TZ: "Asia/Kuwait"
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    volumes:
      - ./.env:/var/www/html/.env
    depends_on:
      - dashboard

  # mysql container
  mysql:
    image: mysql:8.0
    container_name: lms-mysql
    restart: unless-stopped
    expose:
      - '3306'
    networks:
      - lms-network
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_NAME: mysql
      TZ: Asia/Kuwait
    volumes:
      - mysql_data:/var/lib/mysql

# phpmyadmin container
  phpmyadmin:
    image: phpmyadmin
    container_name: lms-phpmyadmin
    restart: unless-stopped
    ports:
      - '8888:80'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: Asia/Kuwait
      UPLOAD_LIMIT: 300M
    networks:
      - lms-network
    depends_on:
      - mysql

# redis container
  redis:
    image: redis:alpine
    container_name: lms-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Kuwait
    networks:
      - lms-network
    ports:
      - '6379:6379'

  cron:
    build:
      context: docker/cron
      dockerfile: Dockerfile
    container_name: lms-cron
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    networks:
      - lms-network
    depends_on:
      - dashboard

# volumes
volumes:
  dashboard:
  mysql_data:
  uploads: